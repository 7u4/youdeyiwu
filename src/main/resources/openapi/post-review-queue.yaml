openapi: "3.1.0"
info:
  title: "Youdeyiwu"
  description: "youdeyiwu is an open-source lightweight forum"
  contact:
    name: "Github"
    url: "https://github.com/dafengzhen/youdeyiwu"
  license:
    name: "MIT"
    url: "https://github.com/dafengzhen/youdeyiwu/blob/main/LICENSE"
  version: "1.0.0"
servers:
  - url: "http://localhost:8080"
    description: "Development server"
paths:
  /posts/review-queues/receive:
    post:
      summary: "POST posts/review-queues/receive"
      operationId: "receive"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReceivePostReviewQueueDto"
        required: true
      responses:
        "204":
          description: "No Content"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Void"
  /posts/review-queues/{id}/refund:
    post:
      summary: "POST posts/review-queues/{id}/refund"
      operationId: "refund"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefundPostReviewQueueDto"
        required: true
      responses:
        "204":
          description: "No Content"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Void"
  /posts/review-queues/{id}/approved:
    post:
      summary: "POST posts/review-queues/{id}/approved"
      operationId: "approved"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApprovedPostReviewQueueDto"
        required: true
      responses:
        "204":
          description: "No Content"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Void"
  /posts/review-queues/{id}/not-approved:
    post:
      summary: "POST posts/review-queues/{id}/not-approved"
      operationId: "notApproved"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotApprovedPostReviewQueueDto"
        required: true
      responses:
        "204":
          description: "No Content"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Void"
  /posts/review-queues/{id}:
    get:
      summary: "GET posts/review-queues/{id}"
      operationId: "query"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostReviewQueueEntityVo"
  /posts/review-queues:
    get:
      summary: "GET posts/review-queues"
      operationId: "queryAll"
      parameters:
        - in: query
          name: page
          description: "Page number, starting from 0"
          schema:
            type: integer
            format: int32
            default: 0
        - in: query
          name: size
          description: "Number of items per page"
          schema:
            type: integer
            format: int32
            default: 15
        - in: query
          name: sort
          description: "Sorting criteria"
          schema:
            type: string
            default: "id,desc"
            example: "id,desc"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageVoPostEntityVo"
components:
  schemas:
    ReceivePostReviewQueueDto:
      type: "object"
      properties:
        latestReviewResultTime:
          type: "string"
          format: "date"
          description: "The estimated completion time of the review must be in the future"
          required: true
        postId:
          type: "integer"
          format: "int64"
          description: "post id"
          required: true
    Void:
      type: "object"
      properties: { }
    RefundPostReviewQueueDto:
      type: "object"
      properties:
        reason:
          type: "string"
    ApprovedPostReviewQueueDto:
      type: "object"
      properties:
        reason:
          type: "string"
    NotApprovedPostReviewQueueDto:
      type: "object"
      properties:
        reason:
          type: "string"
    PermissionEntityVo:
      type: "object"
      properties:
        name:
          type: "string"
        alias:
          type: "string"
        overview:
          type: "string"
        method:
          type: "string"
          enum:
            - "GET"
            - "HEAD"
            - "POST"
            - "PUT"
            - "PATCH"
            - "DELETE"
            - "OPTIONS"
            - "TRACE"
        type:
          type: "string"
          enum:
            - "ANT"
            - "REGEX"
        caseInsensitive:
          type: "boolean"
        sort:
          type: "integer"
          format: "int32"
        matcher:
          $ref: "#/components/schemas/PermissionEntityVo"
        matchers:
          type: "array"
          items:
            $ref: "#/components/schemas/PermissionEntityVo"
        role:
          $ref: "#/components/schemas/RoleEntityVo"
        roles:
          type: "array"
          items:
            $ref: "#/components/schemas/RoleEntityVo"
        id:
          type: "integer"
          format: "int64"
        createdBy:
          type: "integer"
          format: "int64"
        updatedBy:
          type: "integer"
          format: "int64"
        createdOn:
          type: "string"
          format: "date-time"
        updatedOn:
          type: "string"
          format: "date-time"
        deleted:
          type: "boolean"
    RoleEntityVo:
      type: "object"
      properties:
        name:
          type: "string"
        overview:
          type: "string"
        sort:
          type: "integer"
          format: "int32"
        display:
          type: "boolean"
        permissions:
          type: "array"
          items:
            $ref: "#/components/schemas/PermissionEntityVo"
        id:
          type: "integer"
          format: "int64"
        createdBy:
          type: "integer"
          format: "int64"
        updatedBy:
          type: "integer"
          format: "int64"
        createdOn:
          type: "string"
          format: "date-time"
        updatedOn:
          type: "string"
          format: "date-time"
        deleted:
          type: "boolean"
    PostBadgeEntityVo:
      type: "object"
      properties:
        name:
          type: "string"
        sort:
          type: "integer"
          format: "int32"
        styles:
          type: "string"
        classes:
          type: "string"
        id:
          type: "integer"
          format: "int64"
        createdBy:
          type: "integer"
          format: "int64"
        updatedBy:
          type: "integer"
          format: "int64"
        createdOn:
          type: "string"
          format: "date-time"
        updatedOn:
          type: "string"
          format: "date-time"
        deleted:
          type: "boolean"
    PostImageEntityVo:
      type: "object"
      properties:
        url:
          type: "string"
        sort:
          type: "integer"
          format: "int32"
        id:
          type: "integer"
          format: "int64"
        createdBy:
          type: "integer"
          format: "int64"
        updatedBy:
          type: "integer"
          format: "int64"
        createdOn:
          type: "string"
          format: "date-time"
        updatedOn:
          type: "string"
          format: "date-time"
        deleted:
          type: "boolean"
    TagEntityVo:
      type: "object"
      properties:
        name:
          type: "string"
        sort:
          type: "integer"
          format: "int32"
        id:
          type: "integer"
          format: "int64"
        createdBy:
          type: "integer"
          format: "int64"
        updatedBy:
          type: "integer"
          format: "int64"
        createdOn:
          type: "string"
          format: "date-time"
        updatedOn:
          type: "string"
          format: "date-time"
        deleted:
          type: "boolean"
    TagGroupEntityVo:
      type: "object"
      properties:
        name:
          type: "string"
        sort:
          type: "integer"
          format: "int32"
        tags:
          type: "array"
          items:
            $ref: "#/components/schemas/TagEntityVo"
        id:
          type: "integer"
          format: "int64"
        createdBy:
          type: "integer"
          format: "int64"
        updatedBy:
          type: "integer"
          format: "int64"
        createdOn:
          type: "string"
          format: "date-time"
        updatedOn:
          type: "string"
          format: "date-time"
        deleted:
          type: "boolean"
    SectionGroupEntityVo:
      type: "object"
      properties:
        name:
          type: "string"
        sort:
          type: "integer"
          format: "int32"
        sections:
          type: "array"
          items:
            $ref: "#/components/schemas/SectionEntityVo"
        id:
          type: "integer"
          format: "int64"
        createdBy:
          type: "integer"
          format: "int64"
        updatedBy:
          type: "integer"
          format: "int64"
        createdOn:
          type: "string"
          format: "date-time"
        updatedOn:
          type: "string"
          format: "date-time"
        deleted:
          type: "boolean"
    SectionEntityVo:
      type: "object"
      properties:
        name:
          type: "string"
        cover:
          type: "string"
        coverImage:
          type: "array"
          items:
            type: "string"
            format: "byte"
        coverImageType:
          type: "string"
          enum:
            - "PNG"
            - "JPG"
        overview:
          type: "string"
        content:
          type: "string"
        sort:
          type: "integer"
          format: "int32"
        states:
          type: "array"
          items:
            type: "string"
            enum:
              - "SHOW"
              - "HIDE"
              - "LOCK"
              - "ALLOW"
              - "BLOCK"
              - "VISIBLE_AFTER_LOGIN"
        admins:
          type: "array"
          items:
            $ref: "#/components/schemas/UserEntityVo"
        allows:
          type: "array"
          items:
            $ref: "#/components/schemas/UserEntityVo"
        blocks:
          type: "array"
          items:
            $ref: "#/components/schemas/UserEntityVo"
        accessKey:
          type: "string"
        tagGroups:
          type: "array"
          items:
            $ref: "#/components/schemas/TagGroupEntityVo"
        tags:
          type: "array"
          items:
            $ref: "#/components/schemas/TagEntityVo"
        sectionGroups:
          type: "array"
          items:
            $ref: "#/components/schemas/SectionGroupEntityVo"
        user:
          $ref: "#/components/schemas/UserEntityVo"
        id:
          type: "integer"
          format: "int64"
        createdBy:
          type: "integer"
          format: "int64"
        updatedBy:
          type: "integer"
          format: "int64"
        createdOn:
          type: "string"
          format: "date-time"
        updatedOn:
          type: "string"
          format: "date-time"
        deleted:
          type: "boolean"
    CommentEntityVo:
      type: "object"
      properties:
        content:
          type: "string"
        likesCount:
          type: "integer"
          format: "int64"
        reviewState:
          type: "string"
          enum:
            - "APPROVED"
            - "REJECTED"
            - "PENDING_REVIEW"
        user:
          $ref: "#/components/schemas/UserEntityVo"
        uniqueIdentifier:
          type: "string"
        id:
          type: "integer"
          format: "int64"
        createdBy:
          type: "integer"
          format: "int64"
        updatedBy:
          type: "integer"
          format: "int64"
        createdOn:
          type: "string"
          format: "date-time"
        updatedOn:
          type: "string"
          format: "date-time"
        deleted:
          type: "boolean"
    QuoteReplyEntityVo:
      type: "object"
      properties:
        content:
          type: "string"
        likesCount:
          type: "integer"
          format: "int64"
        reviewState:
          type: "string"
          enum:
            - "APPROVED"
            - "REJECTED"
            - "PENDING_REVIEW"
        comment:
          $ref: "#/components/schemas/CommentEntityVo"
        quoteReply:
          $ref: "#/components/schemas/QuoteReplyEntityVo"
        user:
          $ref: "#/components/schemas/UserEntityVo"
        uniqueIdentifier:
          type: "string"
        id:
          type: "integer"
          format: "int64"
        createdBy:
          type: "integer"
          format: "int64"
        updatedBy:
          type: "integer"
          format: "int64"
        createdOn:
          type: "string"
          format: "date-time"
        updatedOn:
          type: "string"
          format: "date-time"
        deleted:
          type: "boolean"
    CommentReplyVo:
      type: "object"
      properties:
        comment:
          $ref: "#/components/schemas/CommentEntityVo"
        reply:
          $ref: "#/components/schemas/QuoteReplyEntityVo"
    PostEntityVo:
      type: "object"
      properties:
        name:
          type: "string"
        cover:
          type: "string"
        coverImage:
          type: "array"
          items:
            type: "string"
            format: "byte"
        coverImageType:
          type: "string"
          enum:
            - "PNG"
            - "JPG"
        overview:
          type: "string"
        content:
          type: "string"
        contentLink:
          type: "string"
        badges:
          type: "array"
          items:
            $ref: "#/components/schemas/PostBadgeEntityVo"
        images:
          type: "array"
          items:
            $ref: "#/components/schemas/PostImageEntityVo"
        states:
          type: "array"
          items:
            type: "string"
            enum:
              - "SHOW"
              - "HIDE"
              - "LOCK"
              - "ALLOW"
              - "BLOCK"
              - "VISIBLE_AFTER_LOGIN"
        reviewState:
          type: "string"
          enum:
            - "APPROVED"
            - "REJECTED"
            - "PENDING_REVIEW"
        sortState:
          type: "string"
          enum:
            - "DEFAULT"
            - "POPULAR"
            - "CURRENT_TOP"
            - "GLOBAL_TOP"
        allows:
          type: "array"
          items:
            $ref: "#/components/schemas/UserEntityVo"
        blocks:
          type: "array"
          items:
            $ref: "#/components/schemas/UserEntityVo"
        accessKey:
          type: "string"
        pageViews:
          type: "integer"
          format: "int64"
        commentsCount:
          type: "integer"
          format: "int64"
        repliesCount:
          type: "integer"
          format: "int64"
        likesCount:
          type: "integer"
          format: "int64"
        followersCount:
          type: "integer"
          format: "int64"
        favoritesCount:
          type: "integer"
          format: "int64"
        section:
          $ref: "#/components/schemas/SectionEntityVo"
        tags:
          type: "array"
          items:
            $ref: "#/components/schemas/TagEntityVo"
        user:
          $ref: "#/components/schemas/UserEntityVo"
        liked:
          type: "boolean"
        followed:
          type: "boolean"
        favorited:
          type: "boolean"
        comments:
          $ref: "#/components/schemas/CommentReplyVo"
        postReviewQueue:
          $ref: "#/components/schemas/PostReviewQueueEntityVo"
        id:
          type: "integer"
          format: "int64"
        createdBy:
          type: "integer"
          format: "int64"
        updatedBy:
          type: "integer"
          format: "int64"
        createdOn:
          type: "string"
          format: "date-time"
        updatedOn:
          type: "string"
          format: "date-time"
        deleted:
          type: "boolean"
    PostFavoriteEntityVo:
      type: "object"
      properties:
        name:
          type: "string"
        overview:
          type: "string"
        content:
          type: "string"
        contentLink:
          type: "string"
        postId:
          type: "integer"
          format: "int64"
        id:
          type: "integer"
          format: "int64"
        createdBy:
          type: "integer"
          format: "int64"
        updatedBy:
          type: "integer"
          format: "int64"
        createdOn:
          type: "string"
          format: "date-time"
        updatedOn:
          type: "string"
          format: "date-time"
        deleted:
          type: "boolean"
    UserStatisticsVo:
      type: "object"
      properties:
        sections:
          type: "integer"
          format: "int32"
        tags:
          type: "integer"
          format: "int32"
        posts:
          type: "integer"
          format: "int32"
        comments:
          type: "integer"
          format: "int32"
        replies:
          type: "integer"
          format: "int32"
        views:
          type: "integer"
          format: "int32"
    UserEntityVo:
      type: "object"
      properties:
        alias:
          type: "string"
        avatar:
          type: "string"
        oneSentence:
          type: "string"
        username:
          type: "string"
        email:
          type: "string"
        lastLoginTime:
          type: "string"
          format: "date-time"
        root:
          type: "boolean"
        accountNonExpired:
          type: "boolean"
        credentialsNonExpired:
          type: "boolean"
        accountNonLocked:
          type: "boolean"
        enabled:
          type: "boolean"
        roles:
          type: "array"
          items:
            $ref: "#/components/schemas/RoleEntityVo"
        posts:
          type: "array"
          items:
            $ref: "#/components/schemas/PostEntityVo"
        favorites:
          type: "array"
          items:
            $ref: "#/components/schemas/PostFavoriteEntityVo"
        relatedSections:
          type: "array"
          items:
            $ref: "#/components/schemas/SectionEntityVo"
        relatedTags:
          type: "array"
          items:
            $ref: "#/components/schemas/TagEntityVo"
        relatedStatistics:
          $ref: "#/components/schemas/UserStatisticsVo"
        id:
          type: "integer"
          format: "int64"
        createdBy:
          type: "integer"
          format: "int64"
        updatedBy:
          type: "integer"
          format: "int64"
        createdOn:
          type: "string"
          format: "date-time"
        updatedOn:
          type: "string"
          format: "date-time"
        deleted:
          type: "boolean"
    PostReviewQueueEntityVo:
      type: "object"
      properties:
        received:
          type: "boolean"
        latestReviewResultTime:
          type: "string"
          format: "date"
        receiver:
          $ref: "#/components/schemas/UserEntityVo"
        post:
          $ref: "#/components/schemas/PostEntityVo"
        id:
          type: "integer"
          format: "int64"
        createdBy:
          type: "integer"
          format: "int64"
        updatedBy:
          type: "integer"
          format: "int64"
        createdOn:
          type: "string"
          format: "date-time"
        updatedOn:
          type: "string"
          format: "date-time"
        deleted:
          type: "boolean"
    PageableVo:
      type: "object"
      properties:
        size:
          type: "integer"
          format: "int32"
        page:
          type: "integer"
          format: "int32"
        pages:
          type: "integer"
          format: "int32"
        next:
          type: "boolean"
        previous:
          type: "boolean"
    PageVoPostEntityVo:
      type: "object"
      properties:
        content:
          type: "array"
          items:
            $ref: "#/components/schemas/PostEntityVo"
        pageable:
          $ref: "#/components/schemas/PageableVo"