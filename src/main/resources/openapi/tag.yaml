openapi: "3.1.0"
info:
  title: "Youdeyiwu"
  description: "youdeyiwu is an open-source lightweight forum"
  contact:
    name: "Github"
    url: "https://github.com/dafengzhen/youdeyiwu"
  license:
    name: "MIT"
    url: "https://github.com/dafengzhen/youdeyiwu/blob/main/LICENSE"
  version: "1.0.0"
servers:
  - url: "http://localhost:8080"
    description: "Development server"
paths:
  /tags:
    post:
      summary: "POST tags"
      operationId: "create"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTagDto"
        required: true
      responses:
        "201":
          description: "Created"
          headers:
            Location:
              schema:
                type: string
              example: '/tags/1'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Void"
    get:
      summary: "GET tags"
      operationId: "queryAll"
      parameters:
        - in: query
          name: page
          description: "Page number, starting from 0"
          schema:
            type: integer
            format: int32
            default: 0
        - in: query
          name: size
          description: "Number of items per page"
          schema:
            type: integer
            format: int32
            default: 15
        - in: query
          name: sort
          description: "Sorting criteria"
          schema:
            type: string
            default: "sort,id,desc"
            example: "sort,id,desc"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageVoTagEntityVo"
  /tags/{id}:
    put:
      summary: "PUT tags/{id}"
      operationId: "update"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTagDto"
        required: true
      responses:
        "204":
          description: "No Content"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Void"
    get:
      summary: "GET tags/{id}"
      operationId: "query"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagEntityVo"
    delete:
      summary: "DELETE tags/{id}"
      operationId: "delete"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "204":
          description: "No Content"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Void"
  /tags/select-all:
    get:
      summary: "GET tags/select-all"
      operationId: "selectAll"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/TagEntityVo"
components:
  schemas:
    CreateTagDto:
      type: "object"
      properties:
        name:
          type: "string"
          description: "tag name"
          required: true
    Void:
      type: "object"
      properties: { }
    UpdateTagDto:
      type: "object"
      properties:
        name:
          type: "string"
        sort:
          type: "integer"
          format: "int32"
    TagEntityVo:
      type: "object"
      properties:
        name:
          type: "string"
        sort:
          type: "integer"
          format: "int32"
        id:
          type: "integer"
          format: "int64"
        createdBy:
          type: "integer"
          format: "int64"
        updatedBy:
          type: "integer"
          format: "int64"
        createdOn:
          type: "string"
          format: "date-time"
        updatedOn:
          type: "string"
          format: "date-time"
        deleted:
          type: "boolean"
    PageableVo:
      type: "object"
      properties:
        size:
          type: "integer"
          format: "int32"
        page:
          type: "integer"
          format: "int32"
        pages:
          type: "integer"
          format: "int32"
        next:
          type: "boolean"
        previous:
          type: "boolean"
    PageVoTagEntityVo:
      type: "object"
      properties:
        content:
          type: "array"
          items:
            $ref: "#/components/schemas/TagEntityVo"
        pageable:
          $ref: "#/components/schemas/PageableVo"
